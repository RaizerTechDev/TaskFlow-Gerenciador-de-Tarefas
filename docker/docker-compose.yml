services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: taskmanager
      JWT_SECRET: your_jwt_secret_key
      JWT_EXPIRE: 30d
    ports:
      - '5000:5000'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - task-manager-network

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ../frontend:/app
      - /app/node_modules  
    environment:
      - VITE_API_URL=http://localhost:5000/api 
      - VITE_API_URL=http://backend:5000/api
    depends_on:
      - backend

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: taskmanager
      POSTGRES_HOST_AUTH_METHOD: trust     
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - task-manager-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres", "ssl=off"]
      interval: 5s
      timeout: 5s

volumes:
  postgres_data:

networks:
  task-manager-network:
    driver: bridge
